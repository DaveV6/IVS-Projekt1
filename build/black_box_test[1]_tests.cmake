add_test( EmptyTree.InsertNode /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=EmptyTree.InsertNode]==] --gtest_also_run_disabled_tests)
set_tests_properties( EmptyTree.InsertNode PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( EmptyTree.DeleteNode /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=EmptyTree.DeleteNode]==] --gtest_also_run_disabled_tests)
set_tests_properties( EmptyTree.DeleteNode PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( EmptyTree.FindNode /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=EmptyTree.FindNode]==] --gtest_also_run_disabled_tests)
set_tests_properties( EmptyTree.FindNode PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NonEmptyTree.InsertMultipleNodes /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=NonEmptyTree.InsertMultipleNodes]==] --gtest_also_run_disabled_tests)
set_tests_properties( NonEmptyTree.InsertMultipleNodes PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NonEmptyTree.DeleteMultipleNodes /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=NonEmptyTree.DeleteMultipleNodes]==] --gtest_also_run_disabled_tests)
set_tests_properties( NonEmptyTree.DeleteMultipleNodes PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NonEmptyTree.FindMultipleNodes /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=NonEmptyTree.FindMultipleNodes]==] --gtest_also_run_disabled_tests)
set_tests_properties( NonEmptyTree.FindMultipleNodes PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TreeAxioms.Axiom1 /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=TreeAxioms.Axiom1]==] --gtest_also_run_disabled_tests)
set_tests_properties( TreeAxioms.Axiom1 PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TreeAxioms.Axiom2 /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=TreeAxioms.Axiom2]==] --gtest_also_run_disabled_tests)
set_tests_properties( TreeAxioms.Axiom2 PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( TreeAxioms.Axiom3 /home/xbujzad00/School/IVS/ivs-project1/build/black_box_test [==[--gtest_filter=TreeAxioms.Axiom3]==] --gtest_also_run_disabled_tests)
set_tests_properties( TreeAxioms.Axiom3 PROPERTIES WORKING_DIRECTORY /home/xbujzad00/School/IVS/ivs-project1/build SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set( black_box_test_TESTS EmptyTree.InsertNode EmptyTree.DeleteNode EmptyTree.FindNode NonEmptyTree.InsertMultipleNodes NonEmptyTree.DeleteMultipleNodes NonEmptyTree.FindMultipleNodes TreeAxioms.Axiom1 TreeAxioms.Axiom2 TreeAxioms.Axiom3)
